version: "3.9"

x-github_events_consumer-common:
  environment:
    &github_events_consumer-common-env
    MONGODB_URI: "${MONGODB_URI}"
    DB_NAME: "${DB_NAME}"

x-github_events_consumer-celery:
  &github_events_consumer-celery
  environment:
    <<: *github_events_consumer-common-env
    CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    GITHUB_TOKEN: "${GITHUB_TOKEN}"
  volumes:
    - ./logs/celery_app:/opt/celery_app/logs
    - "${VOLUME_MOUNT}"
    - ./data/diagrams:/opt/data/diagrams

volumes:
  github_events_consumer_vmongo:
    name: github_events_consumer_vmongo
  github_events_consumer_vrabbitmq:
    name: github_events_consumer_vrabbitmq

services:

  nginx:
    image: nginx
    container_name: github_events_consumer_nginx
    volumes:
      - ./conf/nginx/docker_base.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/certificate.conf:/etc/nginx/certificate.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./conf/nginx/app_docker.conf:/etc/nginx/sites-enabled/app_docker.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # certificate of the host machine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api_prod
    profiles:
      - live_prod

  mongo:
    image: mongo:5.0.8
    container_name: github_events_consumer_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    volumes:
      - github_events_consumer_vmongo:/data/db
      # TODO: implement authentication for api container calls
      # - ./setup/mongo/mongod.conf:/etc/mongo/mongod.conf:ro

  api_test:
    container_name: github_events_consumer_api_test
    image: github_events_consumer_api_img
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      <<: *github_events_consumer-common-env
    command: pytest -v
    depends_on:
      - mongo
    profiles:
      - test

  api_prod:
    container_name: github_events_consumer_api_prod
    image: github_events_consumer_api_img
    environment:
      <<: *github_events_consumer-common-env
    command: uvicorn main:app --host 0.0.0.0 --reload --log-level error
    depends_on:
      - mongo
    ports:
      - "8000:8000"
    profiles:
      - prod
    volumes:
      - ./data/diagrams:/opt/api/templates/diagrams

  celery_test:
    container_name: github_events_consumer_celery_test
    build:
      context: .
      dockerfile: celery_app/Dockerfile
    image: github_events_consumer_celery_img
    <<: *github_events_consumer-celery
    depends_on:
      - rabbitmq
      - mongo
    command: python3.9 -m pytest -v
    profiles:
      - test
    restart: on-failure

  celery_prod:
    container_name: github_events_consumer_celery_prod
    image: github_events_consumer_celery_img
    <<: *github_events_consumer-celery
    depends_on:
      - rabbitmq
      - mongo
    command: sh run.sh
    profiles:
      - prod
      - monitoring
    restart: on-failure

  rabbitmq:
    container_name: github_events_consumer_rabbitmq
    image: rabbitmq:3.8-management
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - github_events_consumer_vrabbitmq:/var/lib/rabbitmq
      - ./logs/rabbitmq:/var/log/rabbitmq
