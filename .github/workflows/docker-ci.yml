name: Docker CI

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'dev/**'
  # The branches below must be a subset of the branches above
  pull_request:
    branches:
      - main

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  RELEASE: 0.3.5

jobs:

  test:

    name: Test built images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
      VOLUME_MOUNT: ${{ secrets.VOLUME_MOUNT }}
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Create network & Mongo container
#        run: >
#          docker network create -d bridge test_network
#          && docker run -d --name github_events_consumer_mongo
#          --env MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
#          --env MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
#          --network=test_network
#          mongo:5.0.8
      - name: Test Celery image
        run: >
          docker-compose
          -f docker-compose.main.yml
          -f docker-compose.mongo.yml
          up celery_test mongo
      - name: Test API image
        run: >
          docker-compose
          -f docker-compose.main.yml
          -f docker-compose.mongo.yml
          up api_test mongo
